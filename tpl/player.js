// Generated by CoffeeScript 1.6.2
(function() {
  var Player;

  window.Player = Player = (function() {
    Player.prototype.codec = null;

    Player.prototype.audio = $('audio')[0];

    Player.prototype._curplaying = {
      trackId: null,
      length: 1
    };

    Player.prototype._bufstart = null;

    Player.prototype._draggingseekbar = false;

    /*
    */


    function Player() {
      this.initVolume();
      this.initSeekbar();
      this.initMouse();
      this.initPlayer();
    }

    /*
    */


    Player.prototype.initMouse = function() {
      var my;

      my = this;
      $('#player').on('click', '.play', function(e) {
        var active;

        if (isNaN(my.audio.duration)) {
          active = $('#playlist .active');
          if (active.length > 0) {
            return window.playlist.playRow(active);
          }
          return window.playlist.playRow($('#playlist tbody tr:eq(0)'));
        }
        return my.audio.play();
      });
      $('#player').on('click', '.pause', function(e) {
        return my.audio.pause();
      });
      $('#player').on('click', '.forward', function(e) {
        return my.playNext();
      });
      $('#player').on('click', '.backward', function(e) {
        return my.playPrev();
      });
      return $('#player').on('click', '.stop', function(e) {
        $('.seekbar .buffer').css('width', '0px');
        my.audio.pause();
        $('#playlist tr').removeClass('playing');
        my.audio.src = '';
        $('#player').attr('class', 'right-of-library stopped');
        store.set('lasttrack', null);
        my._bufstart = null;
        return $('#status span:eq(0)').html('Stopped');
      });
    };

    /*
    */


    Player.prototype.initVolume = function() {
      var my;

      my = this;
      window.vol = new Slider({
        target: $('#player .volume'),
        move: function(pos) {
          var v;

          v = Math.min(1, pos * 2 / 100);
          my.audio.volume = v;
          store.set('volume', v);
          return Math.round(pos);
        }
      });
      if (store.get('volume') !== null) {
        my.audio.volume = store.get('volume');
        return vol.setpos(my.audio.volume * 100);
      } else {
        vol.setpos(50);
        return my.audio.volume = 0.5;
      }
    };

    /*
    */


    Player.prototype.initSeekbar = function() {
      var my;

      my = this;
      return this.seekbar = new window.Slider({
        target: $('#player .seekbar'),
        start: function() {
          return my._draggingseekbar = true;
        },
        move: function(pos) {
          var v;

          v = my.audio.seekable.end(0) / 100 * pos;
          my.audio.currentTime = v;
          return displaytime(v);
        },
        stop: function() {
          return my._draggingseekbar = false;
        }
      });
    };

    /*
    */


    Player.prototype.initPlayer = function() {
      var my;

      my = this;
      $(this.audio).bind('play', function() {
        $('#player').attr('class', 'right-of-library playing');
        return $('#playlist .playing .icon-pause').attr('class', 'icon-play');
      });
      $(this.audio).bind('pause', function() {
        $('#player').attr('class', 'right-of-library paused');
        $('#playlist .playing .icon-play').attr('class', 'icon-pause');
        return $('#status span:eq(0)').html('Paused');
      });
      $(this.audio).bind('ended', function() {
        $('.seekbar .buffer').css('width', '0px');
        my._bufstart = null;
        if (!my.playNext()) {
          $('#player').attr('class', 'right-of-library stopped');
          store.set('lasttrack', null);
          return $('#status span:eq(0)').html('Stopped');
        }
      });
      $(this.audio).bind('timeupdate', function(e) {
        var t, v;

        if (my._draggingseekbar) {
          return;
        }
        v = my.audio.currentTime / my._curplaying.length * 100;
        my.seekbar.setpos(v);
        t = displaytime(my.audio.currentTime);
        $('#status span:eq(0)').html('Playing');
        return $('#status span:eq(1)').html("" + t + " / " + (displaytime(my._curplaying.length)));
      });
      $(this.audio).bind('progress', function(e) {
        var c, dur, exc, r;

        try {
          c = Math.round(my.audio.buffered.end(0) / my._curplaying.length * 100);
        } catch (_error) {
          exc = _error;
          return;
        }
        if (c === 100) {
          return $('#status span:eq(2)').html("Buffer " + c + "%");
        } else {
          if (!my.bufstart) {
            my.bufstart = new Date().getTime() / 1000;
            return;
          }
          dur = new Date().getTime() / 1000 - my.bufstart;
          r = (dur / c) * (100 - c);
          return $('#status span:eq(2)').html("Buffer " + c + "% (~" + (Math.round(r)) + "s remaining)");
        }
      });
      return $(this.audio).bind('progress', function(e) {
        var exc, v;

        try {
          v = my.audio.buffered.end(0) / my._curplaying.length * 100;
        } catch (_error) {
          exc = _error;
          return;
        }
        return $('.seekbar .buffer').css('width', "" + v + "%");
      });
    };

    /*
    	Play audio file `trackId` of `length` seconds
    */


    Player.prototype.play = function(trackId, length) {
      var row;

      if (this.codec === null) {
        return;
      }
      this.audio.pause();
      this.audio.src = '';
      this.audio.src = "" + _root + "/play-track/" + this.codec + "/" + trackId;
      this.audio.play();
      row = $("#playlist tr[data-id=" + trackId + "]");
      $('#playlist tr').removeClass('playing');
      row.addClass('playing').find('td:eq(0)').html('<i class="icon-play"></i>');
      return store.set('lasttrack', trackId);
    };

    /*
    	Try and play the next track
    */


    Player.prototype.playNext = function(prev) {
      var n;

      if (prev == null) {
        prev = false;
      }
      n = prev ? $('#playlist .playing').prev() : $('#playlist .playing').next();
      $('#playlist .playing').removeClass('playing');
      if (n.length > 0) {
        window.playlist.playRow(n);
        return true;
      } else {
        return false;
      }
    };

    /*
    	Try and play the previous track
    */


    Player.prototype.playPrev = function() {
      return this.playNext(true);
    };

    return Player;

  })();

}).call(this);
